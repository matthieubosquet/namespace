export class SHACL {
    // Namespace description
    public static readonly baseURI: string = "http://www.w3.org/ns/shacl#";
    public static readonly prefixLabel: string = "shacl";
    public static readonly version: string = "2017-07-20";

    // Names
    public static readonly AbstractResult: string = SHACL.baseURI.concat("AbstractResult");
    public static readonly AndConstraintComponent: string = SHACL.baseURI.concat("AndConstraintComponent");
    public static readonly AndConstraintComponent_and: string = SHACL.baseURI.concat("AndConstraintComponent-and");
    public static readonly BlankNode: string = SHACL.baseURI.concat("BlankNode");
    public static readonly BlankNodeOrIRI: string = SHACL.baseURI.concat("BlankNodeOrIRI");
    public static readonly BlankNodeOrLiteral: string = SHACL.baseURI.concat("BlankNodeOrLiteral");
    public static readonly ClassConstraintComponent: string = SHACL.baseURI.concat("ClassConstraintComponent");
    public static readonly ClassConstraintComponent_class: string = SHACL.baseURI.concat("ClassConstraintComponent-class");
    public static readonly ClosedConstraintComponent: string = SHACL.baseURI.concat("ClosedConstraintComponent");
    public static readonly ClosedConstraintComponent_closed: string = SHACL.baseURI.concat("ClosedConstraintComponent-closed");
    public static readonly ClosedConstraintComponent_ignoredProperties: string = SHACL.baseURI.concat("ClosedConstraintComponent-ignoredProperties");
    public static readonly ConstraintComponent: string = SHACL.baseURI.concat("ConstraintComponent");
    public static readonly DatatypeConstraintComponent: string = SHACL.baseURI.concat("DatatypeConstraintComponent");
    public static readonly DatatypeConstraintComponent_datatype: string = SHACL.baseURI.concat("DatatypeConstraintComponent-datatype");
    public static readonly DisjointConstraintComponent: string = SHACL.baseURI.concat("DisjointConstraintComponent");
    public static readonly DisjointConstraintComponent_disjoint: string = SHACL.baseURI.concat("DisjointConstraintComponent-disjoint");
    public static readonly EqualsConstraintComponent: string = SHACL.baseURI.concat("EqualsConstraintComponent");
    public static readonly EqualsConstraintComponent_equals: string = SHACL.baseURI.concat("EqualsConstraintComponent-equals");
    public static readonly ExpressionConstraintComponent: string = SHACL.baseURI.concat("ExpressionConstraintComponent");
    public static readonly ExpressionConstraintComponent_expression: string = SHACL.baseURI.concat("ExpressionConstraintComponent-expression");
    public static readonly Function: string = SHACL.baseURI.concat("Function");
    public static readonly HasValueConstraintComponent: string = SHACL.baseURI.concat("HasValueConstraintComponent");
    public static readonly HasValueConstraintComponent_hasValue: string = SHACL.baseURI.concat("HasValueConstraintComponent-hasValue");
    public static readonly IRI: string = SHACL.baseURI.concat("IRI");
    public static readonly IRIOrLiteral: string = SHACL.baseURI.concat("IRIOrLiteral");
    public static readonly InConstraintComponent: string = SHACL.baseURI.concat("InConstraintComponent");
    public static readonly InConstraintComponent_in: string = SHACL.baseURI.concat("InConstraintComponent-in");
    public static readonly Info: string = SHACL.baseURI.concat("Info");
    public static readonly JSConstraint: string = SHACL.baseURI.concat("JSConstraint");
    public static readonly JSConstraint_js: string = SHACL.baseURI.concat("JSConstraint-js");
    public static readonly JSConstraintComponent: string = SHACL.baseURI.concat("JSConstraintComponent");
    public static readonly JSExecutable: string = SHACL.baseURI.concat("JSExecutable");
    public static readonly JSFunction: string = SHACL.baseURI.concat("JSFunction");
    public static readonly JSLibrary: string = SHACL.baseURI.concat("JSLibrary");
    public static readonly JSRule: string = SHACL.baseURI.concat("JSRule");
    public static readonly JSTarget: string = SHACL.baseURI.concat("JSTarget");
    public static readonly JSTargetType: string = SHACL.baseURI.concat("JSTargetType");
    public static readonly JSValidator: string = SHACL.baseURI.concat("JSValidator");
    public static readonly LanguageInConstraintComponent: string = SHACL.baseURI.concat("LanguageInConstraintComponent");
    public static readonly LanguageInConstraintComponent_languageIn: string = SHACL.baseURI.concat("LanguageInConstraintComponent-languageIn");
    public static readonly LessThanConstraintComponent: string = SHACL.baseURI.concat("LessThanConstraintComponent");
    public static readonly LessThanConstraintComponent_lessThan: string = SHACL.baseURI.concat("LessThanConstraintComponent-lessThan");
    public static readonly LessThanOrEqualsConstraintComponent: string = SHACL.baseURI.concat("LessThanOrEqualsConstraintComponent");
    public static readonly LessThanOrEqualsConstraintComponent_lessThanOrEquals: string = SHACL.baseURI.concat("LessThanOrEqualsConstraintComponent-lessThanOrEquals");
    public static readonly Literal: string = SHACL.baseURI.concat("Literal");
    public static readonly MaxCountConstraintComponent: string = SHACL.baseURI.concat("MaxCountConstraintComponent");
    public static readonly MaxCountConstraintComponent_maxCount: string = SHACL.baseURI.concat("MaxCountConstraintComponent-maxCount");
    public static readonly MaxExclusiveConstraintComponent: string = SHACL.baseURI.concat("MaxExclusiveConstraintComponent");
    public static readonly MaxExclusiveConstraintComponent_maxExclusive: string = SHACL.baseURI.concat("MaxExclusiveConstraintComponent-maxExclusive");
    public static readonly MaxInclusiveConstraintComponent: string = SHACL.baseURI.concat("MaxInclusiveConstraintComponent");
    public static readonly MaxInclusiveConstraintComponent_maxInclusive: string = SHACL.baseURI.concat("MaxInclusiveConstraintComponent-maxInclusive");
    public static readonly MaxLengthConstraintComponent: string = SHACL.baseURI.concat("MaxLengthConstraintComponent");
    public static readonly MaxLengthConstraintComponent_maxLength: string = SHACL.baseURI.concat("MaxLengthConstraintComponent-maxLength");
    public static readonly MinCountConstraintComponent: string = SHACL.baseURI.concat("MinCountConstraintComponent");
    public static readonly MinCountConstraintComponent_minCount: string = SHACL.baseURI.concat("MinCountConstraintComponent-minCount");
    public static readonly MinExclusiveConstraintComponent: string = SHACL.baseURI.concat("MinExclusiveConstraintComponent");
    public static readonly MinExclusiveConstraintComponent_minExclusive: string = SHACL.baseURI.concat("MinExclusiveConstraintComponent-minExclusive");
    public static readonly MinInclusiveConstraintComponent: string = SHACL.baseURI.concat("MinInclusiveConstraintComponent");
    public static readonly MinInclusiveConstraintComponent_minInclusive: string = SHACL.baseURI.concat("MinInclusiveConstraintComponent-minInclusive");
    public static readonly MinLengthConstraintComponent: string = SHACL.baseURI.concat("MinLengthConstraintComponent");
    public static readonly MinLengthConstraintComponent_minLength: string = SHACL.baseURI.concat("MinLengthConstraintComponent-minLength");
    public static readonly NodeConstraintComponent: string = SHACL.baseURI.concat("NodeConstraintComponent");
    public static readonly NodeConstraintComponent_node: string = SHACL.baseURI.concat("NodeConstraintComponent-node");
    public static readonly NodeKind: string = SHACL.baseURI.concat("NodeKind");
    public static readonly NodeKindConstraintComponent: string = SHACL.baseURI.concat("NodeKindConstraintComponent");
    public static readonly NodeKindConstraintComponent_nodeKind: string = SHACL.baseURI.concat("NodeKindConstraintComponent-nodeKind");
    public static readonly NodeShape: string = SHACL.baseURI.concat("NodeShape");
    public static readonly NotConstraintComponent: string = SHACL.baseURI.concat("NotConstraintComponent");
    public static readonly NotConstraintComponent_not: string = SHACL.baseURI.concat("NotConstraintComponent-not");
    public static readonly OrConstraintComponent: string = SHACL.baseURI.concat("OrConstraintComponent");
    public static readonly OrConstraintComponent_or: string = SHACL.baseURI.concat("OrConstraintComponent-or");
    public static readonly Parameter: string = SHACL.baseURI.concat("Parameter");
    public static readonly Parameterizable: string = SHACL.baseURI.concat("Parameterizable");
    public static readonly PatternConstraintComponent: string = SHACL.baseURI.concat("PatternConstraintComponent");
    public static readonly PatternConstraintComponent_flags: string = SHACL.baseURI.concat("PatternConstraintComponent-flags");
    public static readonly PatternConstraintComponent_pattern: string = SHACL.baseURI.concat("PatternConstraintComponent-pattern");
    public static readonly PrefixDeclaration: string = SHACL.baseURI.concat("PrefixDeclaration");
    public static readonly PropertyConstraintComponent: string = SHACL.baseURI.concat("PropertyConstraintComponent");
    public static readonly PropertyConstraintComponent_property: string = SHACL.baseURI.concat("PropertyConstraintComponent-property");
    public static readonly PropertyGroup: string = SHACL.baseURI.concat("PropertyGroup");
    public static readonly PropertyShape: string = SHACL.baseURI.concat("PropertyShape");
    public static readonly QualifiedMaxCountConstraintComponent: string = SHACL.baseURI.concat("QualifiedMaxCountConstraintComponent");
    public static readonly QualifiedMaxCountConstraintComponent_qualifiedMaxCount: string = SHACL.baseURI.concat("QualifiedMaxCountConstraintComponent-qualifiedMaxCount");
    public static readonly QualifiedMaxCountConstraintComponent_qualifiedValueShape: string = SHACL.baseURI.concat("QualifiedMaxCountConstraintComponent-qualifiedValueShape");
    public static readonly QualifiedMaxCountConstraintComponent_qualifiedValueShapesDisjoint: string = SHACL.baseURI.concat("QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint");
    public static readonly QualifiedMinCountConstraintComponent: string = SHACL.baseURI.concat("QualifiedMinCountConstraintComponent");
    public static readonly QualifiedMinCountConstraintComponent_qualifiedMinCount: string = SHACL.baseURI.concat("QualifiedMinCountConstraintComponent-qualifiedMinCount");
    public static readonly QualifiedMinCountConstraintComponent_qualifiedValueShape: string = SHACL.baseURI.concat("QualifiedMinCountConstraintComponent-qualifiedValueShape");
    public static readonly QualifiedMinCountConstraintComponent_qualifiedValueShapesDisjoint: string = SHACL.baseURI.concat("QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint");
    public static readonly ResultAnnotation: string = SHACL.baseURI.concat("ResultAnnotation");
    public static readonly Rule: string = SHACL.baseURI.concat("Rule");
    public static readonly SPARQLAskExecutable: string = SHACL.baseURI.concat("SPARQLAskExecutable");
    public static readonly SPARQLAskValidator: string = SHACL.baseURI.concat("SPARQLAskValidator");
    public static readonly SPARQLConstraint: string = SHACL.baseURI.concat("SPARQLConstraint");
    public static readonly SPARQLConstraintComponent: string = SHACL.baseURI.concat("SPARQLConstraintComponent");
    public static readonly SPARQLConstraintComponent_sparql: string = SHACL.baseURI.concat("SPARQLConstraintComponent-sparql");
    public static readonly SPARQLConstructExecutable: string = SHACL.baseURI.concat("SPARQLConstructExecutable");
    public static readonly SPARQLExecutable: string = SHACL.baseURI.concat("SPARQLExecutable");
    public static readonly SPARQLFunction: string = SHACL.baseURI.concat("SPARQLFunction");
    public static readonly SPARQLRule: string = SHACL.baseURI.concat("SPARQLRule");
    public static readonly SPARQLSelectExecutable: string = SHACL.baseURI.concat("SPARQLSelectExecutable");
    public static readonly SPARQLSelectValidator: string = SHACL.baseURI.concat("SPARQLSelectValidator");
    public static readonly SPARQLTarget: string = SHACL.baseURI.concat("SPARQLTarget");
    public static readonly SPARQLTargetType: string = SHACL.baseURI.concat("SPARQLTargetType");
    public static readonly SPARQLUpdateExecutable: string = SHACL.baseURI.concat("SPARQLUpdateExecutable");
    public static readonly Severity: string = SHACL.baseURI.concat("Severity");
    public static readonly Shape: string = SHACL.baseURI.concat("Shape");
    public static readonly Target: string = SHACL.baseURI.concat("Target");
    public static readonly TargetType: string = SHACL.baseURI.concat("TargetType");
    public static readonly TripleRule: string = SHACL.baseURI.concat("TripleRule");
    public static readonly UniqueLangConstraintComponent: string = SHACL.baseURI.concat("UniqueLangConstraintComponent");
    public static readonly UniqueLangConstraintComponent_uniqueLang: string = SHACL.baseURI.concat("UniqueLangConstraintComponent-uniqueLang");
    public static readonly ValidationReport: string = SHACL.baseURI.concat("ValidationReport");
    public static readonly ValidationResult: string = SHACL.baseURI.concat("ValidationResult");
    public static readonly Validator: string = SHACL.baseURI.concat("Validator");
    public static readonly Violation: string = SHACL.baseURI.concat("Violation");
    public static readonly Warning: string = SHACL.baseURI.concat("Warning");
    public static readonly XoneConstraintComponent: string = SHACL.baseURI.concat("XoneConstraintComponent");
    public static readonly XoneConstraintComponent_xone: string = SHACL.baseURI.concat("XoneConstraintComponent-xone");
    public static readonly alternativePath: string = SHACL.baseURI.concat("alternativePath");
    public static readonly and: string = SHACL.baseURI.concat("and");
    public static readonly annotationProperty: string = SHACL.baseURI.concat("annotationProperty");
    public static readonly annotationValue: string = SHACL.baseURI.concat("annotationValue");
    public static readonly annotationVarName: string = SHACL.baseURI.concat("annotationVarName");
    public static readonly ask: string = SHACL.baseURI.concat("ask");
    public static readonly class: string = SHACL.baseURI.concat("class");
    public static readonly closed: string = SHACL.baseURI.concat("closed");
    public static readonly condition: string = SHACL.baseURI.concat("condition");
    public static readonly conforms: string = SHACL.baseURI.concat("conforms");
    public static readonly construct: string = SHACL.baseURI.concat("construct");
    public static readonly datatype: string = SHACL.baseURI.concat("datatype");
    public static readonly deactivated: string = SHACL.baseURI.concat("deactivated");
    public static readonly declare: string = SHACL.baseURI.concat("declare");
    public static readonly defaultValue: string = SHACL.baseURI.concat("defaultValue");
    public static readonly description: string = SHACL.baseURI.concat("description");
    public static readonly detail: string = SHACL.baseURI.concat("detail");
    public static readonly disjoint: string = SHACL.baseURI.concat("disjoint");
    public static readonly entailment: string = SHACL.baseURI.concat("entailment");
    public static readonly equals: string = SHACL.baseURI.concat("equals");
    public static readonly expression: string = SHACL.baseURI.concat("expression");
    public static readonly filterShape: string = SHACL.baseURI.concat("filterShape");
    public static readonly flags: string = SHACL.baseURI.concat("flags");
    public static readonly focusNode: string = SHACL.baseURI.concat("focusNode");
    public static readonly group: string = SHACL.baseURI.concat("group");
    public static readonly hasValue: string = SHACL.baseURI.concat("hasValue");
    public static readonly ignoredProperties: string = SHACL.baseURI.concat("ignoredProperties");
    public static readonly in: string = SHACL.baseURI.concat("in");
    public static readonly intersection: string = SHACL.baseURI.concat("intersection");
    public static readonly inversePath: string = SHACL.baseURI.concat("inversePath");
    public static readonly js: string = SHACL.baseURI.concat("js");
    public static readonly jsFunctionName: string = SHACL.baseURI.concat("jsFunctionName");
    public static readonly jsLibrary: string = SHACL.baseURI.concat("jsLibrary");
    public static readonly jsLibraryURL: string = SHACL.baseURI.concat("jsLibraryURL");
    public static readonly labelTemplate: string = SHACL.baseURI.concat("labelTemplate");
    public static readonly languageIn: string = SHACL.baseURI.concat("languageIn");
    public static readonly lessThan: string = SHACL.baseURI.concat("lessThan");
    public static readonly lessThanOrEquals: string = SHACL.baseURI.concat("lessThanOrEquals");
    public static readonly maxCount: string = SHACL.baseURI.concat("maxCount");
    public static readonly maxExclusive: string = SHACL.baseURI.concat("maxExclusive");
    public static readonly maxInclusive: string = SHACL.baseURI.concat("maxInclusive");
    public static readonly maxLength: string = SHACL.baseURI.concat("maxLength");
    public static readonly message: string = SHACL.baseURI.concat("message");
    public static readonly minCount: string = SHACL.baseURI.concat("minCount");
    public static readonly minExclusive: string = SHACL.baseURI.concat("minExclusive");
    public static readonly minInclusive: string = SHACL.baseURI.concat("minInclusive");
    public static readonly minLength: string = SHACL.baseURI.concat("minLength");
    public static readonly name_: string = SHACL.baseURI.concat("name");
    public static readonly namespace: string = SHACL.baseURI.concat("namespace");
    public static readonly node: string = SHACL.baseURI.concat("node");
    public static readonly nodeKind: string = SHACL.baseURI.concat("nodeKind");
    public static readonly nodeValidator: string = SHACL.baseURI.concat("nodeValidator");
    public static readonly nodes: string = SHACL.baseURI.concat("nodes");
    public static readonly not: string = SHACL.baseURI.concat("not");
    public static readonly object: string = SHACL.baseURI.concat("object");
    public static readonly oneOrMorePath: string = SHACL.baseURI.concat("oneOrMorePath");
    public static readonly optional: string = SHACL.baseURI.concat("optional");
    public static readonly or: string = SHACL.baseURI.concat("or");
    public static readonly order: string = SHACL.baseURI.concat("order");
    public static readonly parameter: string = SHACL.baseURI.concat("parameter");
    public static readonly path: string = SHACL.baseURI.concat("path");
    public static readonly pattern: string = SHACL.baseURI.concat("pattern");
    public static readonly predicate: string = SHACL.baseURI.concat("predicate");
    public static readonly prefix: string = SHACL.baseURI.concat("prefix");
    public static readonly prefixes: string = SHACL.baseURI.concat("prefixes");
    public static readonly property: string = SHACL.baseURI.concat("property");
    public static readonly propertyValidator: string = SHACL.baseURI.concat("propertyValidator");
    public static readonly qualifiedMaxCount: string = SHACL.baseURI.concat("qualifiedMaxCount");
    public static readonly qualifiedMinCount: string = SHACL.baseURI.concat("qualifiedMinCount");
    public static readonly qualifiedValueShape: string = SHACL.baseURI.concat("qualifiedValueShape");
    public static readonly qualifiedValueShapesDisjoint: string = SHACL.baseURI.concat("qualifiedValueShapesDisjoint");
    public static readonly result: string = SHACL.baseURI.concat("result");
    public static readonly resultAnnotation: string = SHACL.baseURI.concat("resultAnnotation");
    public static readonly resultMessage: string = SHACL.baseURI.concat("resultMessage");
    public static readonly resultPath: string = SHACL.baseURI.concat("resultPath");
    public static readonly resultSeverity: string = SHACL.baseURI.concat("resultSeverity");
    public static readonly returnType: string = SHACL.baseURI.concat("returnType");
    public static readonly rule: string = SHACL.baseURI.concat("rule");
    public static readonly select: string = SHACL.baseURI.concat("select");
    public static readonly severity: string = SHACL.baseURI.concat("severity");
    public static readonly shapesGraph: string = SHACL.baseURI.concat("shapesGraph");
    public static readonly shapesGraphWellFormed: string = SHACL.baseURI.concat("shapesGraphWellFormed");
    public static readonly sourceConstraint: string = SHACL.baseURI.concat("sourceConstraint");
    public static readonly sourceConstraintComponent: string = SHACL.baseURI.concat("sourceConstraintComponent");
    public static readonly sourceShape: string = SHACL.baseURI.concat("sourceShape");
    public static readonly sparql: string = SHACL.baseURI.concat("sparql");
    public static readonly subject: string = SHACL.baseURI.concat("subject");
    public static readonly suggestedShapesGraph: string = SHACL.baseURI.concat("suggestedShapesGraph");
    public static readonly target: string = SHACL.baseURI.concat("target");
    public static readonly targetClass: string = SHACL.baseURI.concat("targetClass");
    public static readonly targetNode: string = SHACL.baseURI.concat("targetNode");
    public static readonly targetObjectsOf: string = SHACL.baseURI.concat("targetObjectsOf");
    public static readonly targetSubjectsOf: string = SHACL.baseURI.concat("targetSubjectsOf");
    public static readonly this: string = SHACL.baseURI.concat("this");
    public static readonly union: string = SHACL.baseURI.concat("union");
    public static readonly uniqueLang: string = SHACL.baseURI.concat("uniqueLang");
    public static readonly update: string = SHACL.baseURI.concat("update");
    public static readonly validator: string = SHACL.baseURI.concat("validator");
    public static readonly value: string = SHACL.baseURI.concat("value");
    public static readonly xone: string = SHACL.baseURI.concat("xone");
    public static readonly zeroOrMorePath: string = SHACL.baseURI.concat("zeroOrMorePath");
    public static readonly zeroOrOnePath: string = SHACL.baseURI.concat("zeroOrOnePath");
}